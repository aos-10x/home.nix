# Used for Home Manager for non-NixOS
if ! grep --quiet 'NAME="NixOS"' /etc/os-release; then
  export NIX_PATH=$HOME/.nix-defexpr/channels:/nix/var/nix/profiles/per-user/root/channels
fi

# append to the history file, don't overwrite it
shopt -s histappend

# don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth
HISTSIZE=1000
HISTFILESIZE=2000

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"
if [ -f ~/.bash_aliases ]; then
  . ~/.bash_aliases
fi

if [ -f ~/.bash_functions ]; then
  . ~/.bash_functions
fi

# enable programmable completion features
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Setup GPG agent for Yubikey and SSH
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
gpgconf --launch gpg-agent

# Prompt colors
BRIGHT_BLUE="\033[34;1m"
CYAN="\033[36m"
GREEN="\033[32m"
TEAL="\033[96m"
YELLOW="\033[33m"
CLEAR="\033[0m"

# Show git branch
_show_git_branch () {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

# Show background jobs and if we are in a nix shell
_show_nix_and_jobs () {
  local n
  local j
  if [[ -n $IN_NIX_SHELL ]] || [[ "$PATH" == *"/nix/store"* ]]; then
    n="N";
  else
    n="";
  fi
  if [[ "$1" != 0 ]]; then
    j="$1";
  else
    j="";
  fi
  [[ "$n$j" != "" ]] && echo -e "[$BRIGHT_BLUE$n$CLEAR$j] " || echo "";
}

PS1="\$(_show_nix_and_jobs \j)$GREEN\u@\h:$CYAN\w$YELLOW\$(_show_git_branch)$CLEAR \$ "

# Some environment variables
export SYSTEMD_LESS='FRXMK'; # allow journalctl to wrap long lines
export FZF_DEFAULT_OPTS='--height 30% --border -m'
export FZF_DEFAULT_COMMAND='rg --files --hidden --follow'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

if command -v fzf-share >/dev/null; then
  source "$(fzf-share)/key-bindings.bash"
  source "$(fzf-share)/completion.bash"
fi

# Add goto shortcut
eval "$(gotors init)"
