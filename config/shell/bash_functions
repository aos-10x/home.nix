nsh_rust () {
  if [ ! -f "shell.nix" ]; then
    cat <<EOF > shell.nix
let
  rust = import (builtins.fetchTarball
      "https://github.com/oxalica/rust-overlay/archive/master.tar.gz");
  pkgs = import <nixpkgs> { overlays = [ rust ]; };
in
with pkgs;
mkShell {
  buildInputs = [
    rust-bin.stable.latest.default
  ];
}
EOF

  echo 'shell.nix created'
  fi
}

# This script fixes the issue with Yubikey stored GPG keys where it "caches"
# the saved key locally. If you have multiple yubikeys that are exact copies of
# each other, GPG will think you are using the wrong key.
# See: https://security.stackexchange.com/a/223055
yk_gpg_fix () {
  gpg -K --with-keygrip FF404ABD083C84EC | grep Keygrip | cut  -d' ' -f9 |
    xargs printf -- '/home/aos/.gnupg/private-keys-v1.d/%s.key\n' | xargs rm 2> /dev/null

  gpg --card-status > /dev/null
}

# TODO
tp () {
  local tp_proxy="${1:-teleport}"
  local tp_host="${2:-bespin1}"
  local tp_user

  if [ tp_proxy = "teleport" ]; then
    tp_user="awsen.dabbagh"
  else
    tp_user="ec2-user"
  fi
  local command="TERM=xterm-256color tsh --proxy=${tp_proxy}teleport.txgmesh.net ssh -A ${tp_user}@${tp_host}"

  echo "${command}"
}

# vim: set ft=sh:
